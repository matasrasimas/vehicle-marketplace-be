/*
 * This file is generated by jOOQ.
 */
package org.example.generated.jooq;


import org.example.generated.jooq.tables.Categories;
import org.example.generated.jooq.tables.Comments;
import org.example.generated.jooq.tables.FlywaySchemaHistory;
import org.example.generated.jooq.tables.Posts;
import org.example.generated.jooq.tables.Users;
import org.example.generated.jooq.tables.records.CategoriesRecord;
import org.example.generated.jooq.tables.records.CommentsRecord;
import org.example.generated.jooq.tables.records.FlywaySchemaHistoryRecord;
import org.example.generated.jooq.tables.records.PostsRecord;
import org.example.generated.jooq.tables.records.UsersRecord;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CategoriesRecord> PK_CATEGORIES = Internal.createUniqueKey(Categories.CATEGORIES, DSL.name("PK_categories"), new TableField[] { Categories.CATEGORIES.ID }, true);
    public static final UniqueKey<CommentsRecord> PK_COMMENTS = Internal.createUniqueKey(Comments.COMMENTS, DSL.name("PK_comments"), new TableField[] { Comments.COMMENTS.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> PK_FLYWAY_SCHEMA_HISTORY = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("PK_flyway_schema_history"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<PostsRecord> PK_POSTS = Internal.createUniqueKey(Posts.POSTS, DSL.name("PK_posts"), new TableField[] { Posts.POSTS.ID }, true);
    public static final UniqueKey<UsersRecord> PK_USERS = Internal.createUniqueKey(Users.USERS, DSL.name("PK_users"), new TableField[] { Users.USERS.ID }, true);
}
